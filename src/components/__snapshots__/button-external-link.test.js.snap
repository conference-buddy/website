// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ButtonExternalLink /> adds a additional class dependend on props adds "btn-custom" class if no small prop is given 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ButtonExternalLink
    url="http://forum.conferencebuddy.io/"
  >
    Test Button Linktext
  </ButtonExternalLink>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Test Button Linktext",
      "className": "btn btn-custom",
      "href": "http://forum.conferencebuddy.io/",
    },
    "ref": null,
    "rendered": "Test Button Linktext",
    "type": "a",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Test Button Linktext",
        "className": "btn btn-custom",
        "href": "http://forum.conferencebuddy.io/",
      },
      "ref": null,
      "rendered": "Test Button Linktext",
      "type": "a",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`<ButtonExternalLink /> adds a additional class dependend on props adds "btn-custom-small" class if prop small is true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ButtonExternalLink
    small={true}
    url="http://forum.conferencebuddy.io/"
  >
    Test Button Linktext
  </ButtonExternalLink>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Test Button Linktext",
      "className": "btn btn-custom-small",
      "href": "http://forum.conferencebuddy.io/",
    },
    "ref": null,
    "rendered": "Test Button Linktext",
    "type": "a",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Test Button Linktext",
        "className": "btn btn-custom-small",
        "href": "http://forum.conferencebuddy.io/",
      },
      "ref": null,
      "rendered": "Test Button Linktext",
      "type": "a",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`<ButtonExternalLink /> adds a additional class dependend on props adds a class for style primary 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ButtonExternalLink
    primary={true}
    url="http://forum.conferencebuddy.io/"
  >
    Test Button Linktext
  </ButtonExternalLink>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Test Button Linktext",
      "className": "btn btn-custom btn-primary",
      "href": "http://forum.conferencebuddy.io/",
    },
    "ref": null,
    "rendered": "Test Button Linktext",
    "type": "a",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Test Button Linktext",
        "className": "btn btn-custom btn-primary",
        "href": "http://forum.conferencebuddy.io/",
      },
      "ref": null,
      "rendered": "Test Button Linktext",
      "type": "a",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`<ButtonExternalLink /> adds a additional class dependend on props adds a class for style secondary 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ButtonExternalLink
    secondary={true}
    url="http://forum.conferencebuddy.io/"
  >
    Test Button Linktext
  </ButtonExternalLink>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Test Button Linktext",
      "className": "btn btn-custom btn-secondary",
      "href": "http://forum.conferencebuddy.io/",
    },
    "ref": null,
    "rendered": "Test Button Linktext",
    "type": "a",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Test Button Linktext",
        "className": "btn btn-custom btn-secondary",
        "href": "http://forum.conferencebuddy.io/",
      },
      "ref": null,
      "rendered": "Test Button Linktext",
      "type": "a",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`<ButtonExternalLink /> renders a link with an url and the "btn" class renders a link with a class 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ButtonExternalLink
    url="http://forum.conferencebuddy.io/"
  >
    Test Button Linktext
  </ButtonExternalLink>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Test Button Linktext",
      "className": "btn btn-custom",
      "href": "http://forum.conferencebuddy.io/",
    },
    "ref": null,
    "rendered": "Test Button Linktext",
    "type": "a",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Test Button Linktext",
        "className": "btn btn-custom",
        "href": "http://forum.conferencebuddy.io/",
      },
      "ref": null,
      "rendered": "Test Button Linktext",
      "type": "a",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`<ButtonExternalLink /> renders an a-element with a given content renders a link with a text as children 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ButtonExternalLink
    url="http://forum.conferencebuddy.io/"
  >
    Test Button Linktext
  </ButtonExternalLink>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Test Button Linktext",
      "className": "btn btn-custom",
      "href": "http://forum.conferencebuddy.io/",
    },
    "ref": null,
    "rendered": "Test Button Linktext",
    "type": "a",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Test Button Linktext",
        "className": "btn btn-custom",
        "href": "http://forum.conferencebuddy.io/",
      },
      "ref": null,
      "rendered": "Test Button Linktext",
      "type": "a",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`<ButtonExternalLink /> renders an a-element with a given content renders a link with an image as children 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ButtonExternalLink
    url="http://forum.conferencebuddy.io/"
  >
    <img
      src="test.jpg"
    />
  </ButtonExternalLink>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <img
        src="test.jpg"
      />,
      "className": "btn btn-custom",
      "href": "http://forum.conferencebuddy.io/",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "src": "test.jpg",
      },
      "ref": null,
      "rendered": null,
      "type": "img",
    },
    "type": "a",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <img
          src="test.jpg"
        />,
        "className": "btn btn-custom",
        "href": "http://forum.conferencebuddy.io/",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "src": "test.jpg",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      "type": "a",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
